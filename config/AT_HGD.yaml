
OPTIONS:
    # Whether to train on raw and/or adversarial examples.
    RAW: TRUE
    ADV: TRUE

HYPERPARAMETERS:
    BATCH_SIZE: 64
    EPOCHS: 30
    OPTIM:
        NAME: 'ADAM'
        LEARNING_RATE: 0.001
        WEIGHT_DECAY: 0
#     LEARNING_RATE: 0.001
#     MOMENTUM: null
#     NESTEROV: null
#     WEIGHT_DECAY: null
    PRINT_FREQ: 10

DATASET:
    NAME: 'CIFAR10'
    CLASSES: 10
    DIR_PATH: 'datasets/'
    NORMALIZE: FALSE
    CROP: FALSE
    
ATTACK:
    NAME: "PGD"
    MAX_ITER: 7
    MOMENTUM: null
    # [CONSTANT(4), DYNAMIC(MAX_ITER), RANDOM_RANGE]
    EPSILON:
        TYPE: 'RANDOM'
        VALUE: null
        MIN: 0
        MAX: 17
    ALPHA:
        NAME: 'CONSTANT'
        # Denominator to compute alpha: alpha = EPSILON / DIVISOR
        DIVISOR: 4


MODELS:
    # Model used to generate adversarial examples (ATTACK model)
    TRAIN_MODEL:
        NAME: "HGD"
        TRAIN: TRUE
        PARALLEL: FALSE
        DENOISER_PATH: null
        SAVE_DIR: "chkpt/denoiser_pgd7/"
        TARGET:
            NAME: "WideResNet"
            DEPTH: 28
            WIDEN_FACTOR: 10
            DROP_RATE: 0
            PARALLEL: TRUE
            PRETRAINED: TRUE
            CHKPT_PATH: "chkpt/chkpt_scaled/chkpt_plain__model_best.pth.tar"
    
    # Model we are trying to fool
    ADV_MODEL:
        NAME: "WideResNet"
        DEPTH: 28
        WIDEN_FACTOR: 10
        DROP_RATE: 0
        PARALLEL: TRUE
        PRETRAINED: TRUE
        CHKPT_PATH: "chkpt/chkpt_scaled/chkpt_plain__model_best.pth.tar"

    
PATHS:
    ADV_MODEL_PATH: "chkpt/chkpt_scaled/chkpt_plain__model_best.pth.tar"
    THREAT_MODEL_PATH: "chkpt/chkpt_scaled/chkpt_plain__model_best.pth.tar"
    RESULTS_PATH: 'results/'